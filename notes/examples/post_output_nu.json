"---\ntitle: Markdown Test\nauthor: Lawen Thayalakrishnan\ntags: markdown, python, parser\n---\n{ blocktype=\"meta\" }\n\n## Pargraphs\n{ blocktype=\"heading\" }\n\nPargraph 4 **eos** aperiam dolorem numquam quisquam [^1]. Cupiditate ==reprehenderit== beatae ab inventore libero. Accusantium explicabo optio debitis magni sint earum excepturi. Dicta aliquid cupiditate. Consequuntur temporibus `code` voluptates _similique_. Aut maiores hic laudantium distinctio[^2]. Aliquid magni expedita voluptatem illo laudantium illo. Quidem occaecati voluptas odit^5^ ex aspernatur eius ~~consectetur~~ blanditiis. Aperiam ullam iure soluta animi voluptatem pariatur nesciunt voluptatibus. Fuga iste in.\n{ blocktype=\"paragraph\" }\n\nTo include a link, we place the link text in brackets and immediately follow it with the link text in parentheses like [this link](https://lawen.thayalakrishnan.com) to the homepage! We can emphasise **[the link](https://lawen.thayalakrishnan.com)** by enclosing the markdown in double asterisks. The same applies to single asterisk to italise [the link](https://lawen.thayalakrishnan.com). Use angle brackets, to render the link raw <https://lawen.thayalakrishnan.com>. This is an email address <example@email.com> in the middle of a paragraph!\n{ blocktype=\"paragraph\" }\n\n## Image\n{ blocktype=\"heading\" }\n\n![ This is an example of a basic image in markdown with a caption ](https://thayalakrishnan-lawen-prod-media.s3.ap-southeast-2.amazonaws.com/media/images/covers/image2.jpg \"Title for a basic image with a caption\")\n{ blocktype=\"image\" subtype=\"still\" height=\"1080\" width=\"1920\" caption=\"This is an example of a caption being included with a basic image.\" }\n\n## Code Block\n\n```python\nfrom nba_api.stats.endpoints import playerawards as pa\n```\n{ blocktype=\"code\" filename=\"playerawards.py\" }\n\n```\nfrom nba_api.stats.endpoints import playerawards as pa\n```\n{ blocktype=\"code\" }\n\n```python\nfrom nba_api.stats.endpoints import playerawards as pa\n\ndef DataReturn(dataset):\n    headers, data = dataset[\"headers\"], dataset[\"data\"]\n    if (len(data) == 0):            # no return value\n        print('No Values')\n        return []\n    elif (len( data ) == 1):        # one row\n        return data[0]\n    else:                           # multiple rows\n        return data\n\ndef getPlayerAccolades(player_id):\n    player = pa.PlayerAwards(player_id=player_id).player_awards\n    return DataReturn(player.get_dict())\n\ndef CreateCounter(dataset, position):\n    values = [_[position] for _ in dataset]\n    dict_counter = dict.fromkeys(set(values), 0)\n    [dict_counter[_] + 1 for _ in values]\n    print(dict_counter)\n    return dict_counter\n```\n{ blocktype=\"code\" language=\"python\" }\n\n```md\n> blockquote\n> blockquote\n\n> Outside Quote\n>\n> > Inside Quote\n>\n```\n{ blocktype=\"code\" }\n\n## Line break\n{ blocktype=\"heading\" }\n\n---\n{ blocktype=\"hr\" }\n\n***\n{ blocktype=\"hr\" }\n\n## Table\n{ blocktype=\"heading\" }\n\n| Column 1 Title | Column 2 Title |\n| ----------- | ----------- |\n| Row 1 Column 1| Row 1 Column 2 |\n| Row 2 Column 1| Row 2 Column 2 |\n{ blocktype=\"table\" id=\"small-table\" caption=\"small table\" }\n\n| Column 1 Title | Column 2 Title |\n| ----------- | ----------- |\n| `Row 1 Column 1` | Row 1 Column 2 |\n| Row 2 Column 1| Row 2 Column 2 |\n{ blocktype=\"table\" id=\"small-table\" caption=\"small table with inline markup\" }\n\n## Blockquote\n{ blocktype=\"heading\" }\n\n> blockquote\n> blockquote\n{ blocktype=\"blockquote\" cite=\"www.google.com\" }\n\n> Outside Quote\n>\n> > Inside Quote\n>\n{ blocktype=\"blockquote\" cite=\"www.google.com\" }\n\n> ## Blockquote heading\n> { blocktype=\"heading\" }\n>\n> A Paragraph is the default element. How about some **inline markdown**?\n>\n> - list item 1\n> - list item 2\n> - list item 3\n{ blocktype=\"blockquote\" cite=\"www.google.com\" }\n\n>\n> > ## Blockquote heading\n> > { blocktype=\"heading\" }\n> >\n> > A Paragraph is the default element. How about some **inline markdown**?\n> >\n> > A second nested block in a blockquote with some **inline markdown**?\n> >\n> > - list item 1\n> > - list item 2\n> > - list item 3\n>\n{ blocktype=\"blockquote\" cite=\"www.google.com\" }\n\n## Ordered List\n{ blocktype=\"heading\" }\n\n1. Item 1\n2. Item 2\n3. Item 3\n4. Item 4\n{ blocktype=\"o list\" }\n\n1. Item 1\n2. Item 2\n3. Item 3\n    1. Indented Item 1\n    2. Indented Item 2\n4. Item 4\n{ blocktype=\"o list\" }\n\n1. Item 1 line 1.\n   Item 1 line 2.\n   \n   Item 1 line 3 after double line break.\n2. Item 2\n3. Item 3\n4. Item 4\n{ blocktype=\"o list\" }\n\n1. Item 1\n2. Item 2\n3. Item 3\n    1. Item 3 Subitem 1 line 1.\n       Item 3 Subitem 1 line 2.\n       \n       Item 3 Subitem 1 line 3.\n    2. Indented Item 2\n4. Item 4\n{ blocktype=\"o list\" }\n\n## Unordered List\n{ blocktype=\"heading\" }\n\n- Item 1\n- Item 2\n- Item 3\n- Item 4\n{ blocktype=\"u list\" }\n\n- Item 1\n- Item 2\n- Item 3\n    - Indented Item 1\n    - Indented Item 2\n- Item 4\n{ blocktype=\"u list\" }\n\n- Item 1 line 1.\n  Item 1 line 2.\n  \n  Item 1 line 3 after double line break\n- Item 2\n- Item 3\n- Item 4\n{ blocktype=\"u list\" }\n\n- Item 1\n- Item 2\n- Item 3\n    - Item 3 Subitem 1 line 1.\n      Item 3 Subitem 1 line 2.\n      \n      Item 3 Subitem 1 line 3.\n    - Indented Item 2\n- Item 4\n{ blocktype=\"u list\" }\n\n- Item 1: line 1.\n  Item 1: line 2.\n- Item 2: line 1.\n  Item 2: line 2.\n  \n  Item 2: line 3.\n  - Item 2.1: line 1.\n  - Item 2.2: line 1.\n  - Item 2.3: line 1.\n    1. Item 2.3.1: line 1.\n    2. Item 2.3.2: line 1.\n    3. Item 2.3.3: line 1.\n  - Item 2.4: line 1.\n- Item 3: line 1.\n  - Item 3.1: line 1.\n    Item 3.1: line 2.\n    \n    ```python\n    for p in range(3):\n        print(p)\n    ```\n    \n    Item 3.1: line 3.\n  - Item 3.2: line 1.\n- Item 4: line 1.\n{ blocktype=\"u list\" }\n\n## Admonition\n{ blocktype=\"heading\" }\n\n!!! note \"Note Title\"\n    this is an admonition.\n{ blocktype=\"admonition\" }\n\n!!! tip \"Tip Title\"\n    for tips and tricks.\n    \n    multiline admontion.\n{ blocktype=\"admonition\" }\n\n!!! tip \"Tip Title\"\n    for tips and tricks.\n    \n    multiline admontion.\n    \n    ```python\n    for i in range(5):\n        print(i)\n    ```\n{ blocktype=\"admonition\" }\n\n!!! top \"question\"\n    further ideas, further links etc.\n{ blocktype=\"admonition\" }\n\n## Definition Lists\n{ blocktype=\"heading\" }\n\nFirst Term\n: This is the definition of the first term.\n{ blocktype=\"dl list\" }\n\nSecond Term\n: This is the first definition of the second term.\n: This is the second definition of the second term.\n{ blocktype=\"dl list\" }\n\nThird Term\n: This is the first definition of the third term.\n: This is the second definition of the third term.\n{ blocktype=\"dl list\" }\n\n## Footnotes\n{ blocktype=\"heading\" }\n\n[^1]:\n    Footnote 1.\n{ blocktype=\"footnote\" }\n\n[^2]:\n    Footnote 2 and some inline `code`.\n    If we indent the paragraph we cant put as much content here as we would like.\n    \n    This is a multiline footnote. It also does not matter where we put the footnote definition!\n{ blocktype=\"footnote\" }\n\n[^3]:\n    Footnote 3 and some inline `code`.\n    If we indent the paragraph we cant put as much content here as we would like.\n    \n    This is a multiline footnote. It also does not matter where we put the footnote definition!\n{ blocktype=\"footnote\" }\n\n## Done\n{ blocktype=\"heading\" }\n\n"